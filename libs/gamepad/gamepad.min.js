const Gamepad=class{constructor(e){e=e||{},this.worker=new Gamepad.Worker,this.blocklyManager=new Gamepad.BlocklyManager(e),this.jsonManager=new Gamepad.JsonManager,this.magicJson=!0===e.magicJson,this.highlight=void 0!==e.customHighlight,this.reset(),this.worker.onRequest(this,this.onRequest)}get level(){return this.jsonManager.observer}set level(e){this.jsonManager.init([e])}get levels(){return this.jsonManager.observers}set levels(e){if(!Array.isArray(e))throw new Error("levels argument must be an array");this.jsonManager.init(e)}onRequest(e,t,r){!this.blocklyManager.isCoding&&this.highlight&&this.blocklyManager.setHighlight(e.id),e.method!=Gamepad.STATES.STARTED||this.state!=Gamepad.STATES.FINISHED&&this.state!=Gamepad.STATES.COMPLETED||t||this.jsonManager.loadNext(),e.method!=Gamepad.STATES.FINISHED&&e.method!=Gamepad.STATES.COMPLETED||this.state!=Gamepad.STATES.STARTED||!t||this.jsonManager.loadPrior(),this.magicJson&&r&&(t?this.jsonManager.unloadChanges():this.jsonManager.loadChanges());let s=this.game(e,t,r);return e.method!=Gamepad.STATES.STARTED&&e.method!=Gamepad.STATES.FINISHED&&e.method!=Gamepad.STATES.COMPLETED||(this.state=e.method),this.magicJson&&!r&&this.jsonManager.commit(),s}setGame(e,t){if("function"!=typeof t)throw new Error("method is not a function");this.game=function(){return t.apply(e,[...arguments])}}load(e){if(this.state=Gamepad.STATES.STARTED,void 0!==e&&(isNaN(e)||e<1))throw new Error("times must be a number greater than 0.");e=e||1,this.worker.reset();let t=this.blocklyManager.code(e);return this.jsonManager.reset(),Gamepad.evalContext(t,this.worker.getInstance()),this.blocklyManager.getBlocksNumber()}reset(){this.state=Gamepad.STATES.STARTED,this.jsonManager.reset(),this.worker.reset(),this.blocklyManager.reset()}setToolbox(e){this.blocklyManager.setToolbox(e)}forward(){return this.worker.stop(),this.worker.go(!1)}backward(){return this.worker.stop(),this.worker.go(!0)}play(e){this.worker.removeBreakpoint(),this.worker.freeQueue(),this.worker.start(e)}pause(){this.worker.stop(),this.worker.freeQueue()}togglePlay(){this.worker.isRunning?this.pause():this.play(this.worker.back)}debug(e,t){let r=this.worker.setBreakpoint(e);return this.worker.start(t),r}save(e){this.blocklyManager.save(e)}restore(e){this.blocklyManager.restore(e)}static version(){return"1.0.1"}};Gamepad.SYMBOL=Symbol("gamepad.js"),Gamepad.TOOLBOX={},Gamepad.CONTEXT={},Gamepad.INPUTS={},Gamepad.ERRORS={CLOSED:"CLOSED",FINISHED:"FINISHED",COMPLETED:"COMPLETED"},Gamepad.STATES={STARTED:"STARTED",FINISHED:"FINISHED",COMPLETED:"COMPLETED"},Gamepad.BLOCKS={START:"start"},Gamepad.TEMPLATES={WHILE:"while",DO_WHILE:"do_while",IF:"if",IF_ELSE:"if_else"},Gamepad.utils={xml2json:function(e,t){var r={toObj:function(e){var t={};if(1==e.nodeType){if(e.attributes.length)for(var s=0;s<e.attributes.length;s++)t["@"+e.attributes[s].nodeName]=(e.attributes[s].nodeValue||"").toString();if(e.firstChild){for(var a=0,o=0,i=!1,n=e.firstChild;n;n=n.nextSibling)1==n.nodeType?i=!0:3==n.nodeType&&n.nodeValue.match(/[^ \f\n\r\t\v]/)?a++:4==n.nodeType&&o++;if(i)if(a<2&&o<2){r.removeWhite(e);for(n=e.firstChild;n;n=n.nextSibling)3==n.nodeType?t["#text"]=r.escape(n.nodeValue):4==n.nodeType?t["#cdata"]=r.escape(n.nodeValue):t[n.nodeName]?t[n.nodeName]instanceof Array?t[n.nodeName][t[n.nodeName].length]=r.toObj(n):t[n.nodeName]=[t[n.nodeName],r.toObj(n)]:t[n.nodeName]=r.toObj(n)}else e.attributes.length?t["#text"]=r.escape(r.innerXml(e)):t=r.escape(r.innerXml(e));else if(a)e.attributes.length?t["#text"]=r.escape(r.innerXml(e)):t=r.escape(r.innerXml(e));else if(o)if(o>1)t=r.escape(r.innerXml(e));else for(n=e.firstChild;n;n=n.nextSibling)t["#cdata"]=r.escape(n.nodeValue)}e.attributes.length||e.firstChild||(t=null)}else 9==e.nodeType&&(t=r.toObj(e.documentElement));return t},toJson:function(e,t,s){var a=t?'"'+t+'"':"";if(e instanceof Array){for(var o=0,i=e.length;o<i;o++)e[o]=r.toJson(e[o],"",s+"\t");a+=(t?":[":"[")+(e.length>1?"\n"+s+"\t"+e.join(",\n"+s+"\t")+"\n"+s:e.join(""))+"]"}else if(null==e)a+=(t&&":")+"null";else if("object"==typeof e){var n=[];for(var l in e)n[n.length]=r.toJson(e[l],l,s+"\t");a+=(t?":{":"{")+(n.length>1?"\n"+s+"\t"+n.join(",\n"+s+"\t")+"\n"+s:n.join(""))+"}"}else a+="string"==typeof e?(t&&":")+'"'+e.toString()+'"':(t&&":")+e.toString();return a},innerXml:function(e){var t="";if("innerHTML"in e)t=e.innerHTML;else for(var r=function(e){var t="";if(1==e.nodeType){t+="<"+e.nodeName;for(var s=0;s<e.attributes.length;s++)t+=" "+e.attributes[s].nodeName+'="'+(e.attributes[s].nodeValue||"").toString()+'"';if(e.firstChild){t+=">";for(var a=e.firstChild;a;a=a.nextSibling)t+=r(a);t+="</"+e.nodeName+">"}else t+="/>"}else 3==e.nodeType?t+=e.nodeValue:4==e.nodeType&&(t+="<![CDATA["+e.nodeValue+"]]>");return t},s=e.firstChild;s;s=s.nextSibling)t+=r(s);return t},escape:function(e){return e.replace(/[\\]/g,"\\\\").replace(/[\"]/g,'\\"').replace(/[\n]/g,"\\n").replace(/[\r]/g,"\\r")},removeWhite:function(e){e.normalize();for(var t=e.firstChild;t;)if(3==t.nodeType)if(t.nodeValue.match(/[^ \f\n\r\t\v]/))t=t.nextSibling;else{var s=t.nextSibling;e.removeChild(t),t=s}else 1==t.nodeType?(r.removeWhite(t),t=t.nextSibling):t=t.nextSibling;return e}};9==e.nodeType&&(e=e.documentElement);var s=r.toJson(r.toObj(r.removeWhite(e)),e.nodeName,"\t");return"{\n"+t+(t?s.replace(/\t/g,t):s.replace(/\t|\n/g,""))+"\n}"},json2xml:function(e,t){var r=function(e,t,s){var a="";if(e instanceof Array)for(var o=0,i=e.length;o<i;o++)a+=s+r(e[o],t,s+"\t")+"\n";else if("object"==typeof e){var n=!1;for(var l in a+=s+"<"+t.toLowerCase(),e)"@"==l.charAt(0)?a+=" "+l.substr(1)+'="'+e[l].toString()+'"':n=!0;if(a+=n?">":"/>",n){for(var l in e)"#text"==l?a+=e[l]:"#cdata"==l?a+="<![CDATA["+e[l]+"]]>":"@"!=l.charAt(0)&&(a+=r(e[l],l,s+"\t"));a+=("\n"==a.charAt(a.length-1)?s:"")+"</"+t.toLowerCase()+">"}}else a+=s+"<"+t+">"+e.toString()+"</"+t+">";return a},s="";for(var a in e)s+=r(e[a],a.toString().toLowerCase(),"");return t?s.replace(/\t/g,t):s.replace(/\t|\n/g,"")},filter:function(e,t){let r=!1,s=!1;if("PROCEDURE"==e["@custom"])return!1!==t.procedure;if("VARIABLE"==e["@custom"])return!1!==t.variable;if(e.CATEGORY){let s;for(s=0;s<e.CATEGORY.length;s++)Gamepad.utils.filter(e.CATEGORY[s],t)||(e.CATEGORY.splice(s,1),s--);s>0&&(r=!0)}if(e.BLOCK){let r;for(r=0;r<e.BLOCK.length;r++)t.blocks.includes(e.BLOCK[r]["@type"])||(e.BLOCK.splice(r,1),r--);r>0&&(s=!0)}return r||s},blocks:function(e){let t=[];for(let r in e){let s=e[r],a=!1,o=!1;if("statements"in s){if(!Array.isArray(s.statements)||0==s.statements.length)throw new Error("statements must be an array of string");a=!0}if("template"in s){if(!Object.values(Gamepad.TEMPLATES).includes(s.template))throw new Error("template must be one of Gamepad['TEMPLATES']");o=!0}if(o&&!a)throw new Error("a template block require at least a statement");if(!o&&a)throw new Error("statements setted without the template");Blockly.JavaScript[""+r]=Gamepad.utils.js(s.method,s.args,s.order,s.template,s.statements),"json"in s?(s.json.type=r,t.push(s.json)):"javascript"in s&&(Blockly.Blocks[r]=s.javascript)}Blockly.defineBlocksWithJsonArray(t)},wrap:function(e){if(!Array.isArray(e))throw new Error("blocks must be an array of block types");for(let t of e){if(!(t in Blockly.JavaScript))throw new Error("The following type does not exist: "+t);let e=Blockly.JavaScript[t];switch(t){case"procedures_defnoreturn":case"procedures_defreturn":Blockly.JavaScript[t]=function(e){var r=Blockly.JavaScript.variableDB_.getName(e.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),s=Blockly.JavaScript.statementToCode(e,"STACK");if(Blockly.JavaScript.STATEMENT_PREFIX){var a=e.id.replace(/\$/g,"$$$$");s=Blockly.JavaScript.prefixLines(Blockly.JavaScript.STATEMENT_PREFIX.replace(/%1/g,"'"+a+"'"),Blockly.JavaScript.INDENT)+s}Blockly.JavaScript.INFINITE_LOOP_TRAP&&(s=Blockly.JavaScript.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+e.id+"'")+s),(a=Blockly.JavaScript.valueToCode(e,"RETURN",Blockly.JavaScript.ORDER_NONE)||"")&&(a=Blockly.JavaScript.INDENT+"return "+a+";\n");for(var o=[],i=0;i<e.arguments_.length;i++)o[i]=Blockly.JavaScript.variableDB_.getName(e.arguments_[i],Blockly.Variables.NAME_TYPE);return s="async function "+r+"("+o.join(", ")+") {\n"+Gamepad.utils.request(t,[r],e.id)+s+a+"\n}",s=Blockly.JavaScript.scrub_(e,s),Blockly.JavaScript.definitions_["%"+r]=s,null};break;default:Blockly.JavaScript[t]=function(r){let s=e.apply(this,[...arguments]),a=Gamepad.utils.request(t,[],r.id);return Array.isArray(s)?s[0]=a.slice(0,-1)+".then(async () => "+s[0]+" )\n":s=a+s,s}}}},build:function(e,t,r,s){return"string"!=typeof e&&(e=""),Array.isArray(t)||(t=[]),"string"!=typeof e&&(r=""),s?{method:e,args:t,id:r,data:s}:{method:e,args:t,id:r}},request:function(e,t,r,s){let a=Gamepad.utils.build(e,t,r),o=`await worker.setRequest({ ${e=`method: '${a.method}'`}, ${t=`args: ${JSON.stringify(a.args)}`}, ${r=`id: '${a.id}'`} })\n`;return null!=s?[o,s]:o},js:function(e,t,r,s,a){return t=Array.isArray(t)?t:[],a=Array.isArray(a)?a:[],function(o){let i=[],n=[];for(let e of t){let t="function"==typeof e.get?e.get:e=>e;null!=e.field?i.push(t(o.getFieldValue(e.field))):null!=e.input?i.push(t(Gamepad.INPUTS[e.input])):null!=e.value&&i.push(t(e.value))}for(let e of a)n.push(Blockly.JavaScript.statementToCode(o,e));switch(s){case Gamepad.TEMPLATES.WHILE:return"while("+Gamepad.utils.request(e,i,o.id)+"){\n"+n[0]+"}";case Gamepad.TEMPLATES.DO_WHILE:return"do{"+n[0]+"}while{\n"+Gamepad.utils.request(e,i,o.id)+"}";case Gamepad.TEMPLATES.IF:return"if("+Gamepad.utils.request(e,i,o.id)+"){\n"+n[0]+"}";case Gamepad.TEMPLATES.IF_ELSE:return"if("+Gamepad.utils.request(e,i,o.id)+"){\n"+n[0]+"}else{"+n[1]+"}";default:return Gamepad.utils.request(e,i,o.id,r)}}},code:function(e,t){return"async function f() {\n   try{\n"+(e=("try {\n"+Gamepad.utils.request(Gamepad.STATES.STARTED,[],Gamepad.STATES.STARTED)+e+Gamepad.utils.request(Gamepad.STATES.FINISHED,[],Gamepad.STATES.FINISHED)+'} catch(error) { if(error != Gamepad["ERRORS"]["FINISHED"]) throw error; }\n').repeat(t))+(t>1?Gamepad.utils.request(Gamepad.STATES.COMPLETED,[],Gamepad.STATES.COMPLETED):"")+'       worker.close();\n   }catch(error){ if(error != Gamepad["ERRORS"]["COMPLETED"]) { throw error; } }\n   }\nf();'},promiseWrapper:function(){let e,t=new Promise(t=>{e=t});var r=!0,s=!1;return t.isFulfilled=function(){return s},t.isPending=function(){return r},t.resolve=function(t){r=!1,s=!0,e(t)},t},errorHandler:function(e){if(e!==Gamepad.ERRORS.CLOSED)throw e}},Gamepad.setting=function(){Blockly.Trashcan.prototype.clear=function(){this.contents_=new Array},Blockly.Scrollbar.scrollbarThickness=12,Blockly.JavaScript.procedures_defreturn=function(e){var t=Blockly.JavaScript.variableDB_.getName(e.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),r=Blockly.JavaScript.statementToCode(e,"STACK");if(Blockly.JavaScript.STATEMENT_PREFIX){var s=e.id.replace(/\$/g,"$$$$");r=Blockly.JavaScript.prefixLines(Blockly.JavaScript.STATEMENT_PREFIX.replace(/%1/g,"'"+s+"'"),Blockly.JavaScript.INDENT)+r}Blockly.JavaScript.INFINITE_LOOP_TRAP&&(r=Blockly.JavaScript.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+e.id+"'")+r),(s=Blockly.JavaScript.valueToCode(e,"RETURN",Blockly.JavaScript.ORDER_NONE)||"")&&(s=Blockly.JavaScript.INDENT+"return "+s+";\n");for(var a=[],o=0;o<e.arguments_.length;o++)a[o]=Blockly.JavaScript.variableDB_.getName(e.arguments_[o],Blockly.Variables.NAME_TYPE);return r="async function "+t+"("+a.join(", ")+") {\n"+r+s+"\n}",r=Blockly.JavaScript.scrub_(e,r),Blockly.JavaScript.definitions_["%"+t]=r,null},Blockly.JavaScript.procedures_defnoreturn=Blockly.JavaScript.procedures_defreturn,Blockly.JavaScript.procedures_callreturn=function(e){for(var t=Blockly.JavaScript.variableDB_.getName(e.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),r=[],s=0;s<e.arguments_.length;s++)r[s]=Blockly.JavaScript.valueToCode(e,"ARG"+s,Blockly.JavaScript.ORDER_COMMA)||"null";return["await "+t+"("+r.join(", ")+")",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.procedures_callnoreturn=function(e){for(var t=Blockly.JavaScript.variableDB_.getName(e.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),r=[],s=0;s<e.arguments_.length;s++)r[s]=Blockly.JavaScript.valueToCode(e,"ARG"+s,Blockly.JavaScript.ORDER_COMMA)||"null";return"await "+t+"("+r.join(", ")+");\n"},Blockly.JavaScript[Gamepad.BLOCKS.START]=function(){return""},Blockly.JavaScript.addReservedWords("Blockly,CONTEXT,worker,code,reject,resolve,f"),Blockly.defineBlocksWithJsonArray([{type:Gamepad.BLOCKS.START,message0:"Start",deletable_:!1,lastDummyAlign0:"CENTRE",nextStatement:null,style:"hat_blocks"}])},Gamepad.init=function(e){if(!Blockly)throw new Error("Blockly library not included");if(!Blockly.hasOwnProperty("JavaScript"))throw new Error("JavaScript generator library not included");if(void 0===e)throw new Error("options must not be undefined");e.hasOwnProperty("inputs")&&(this.INPUTS=e.inputs),e.hasOwnProperty("toolbox")&&(this.TOOLBOX=Gamepad.utils.xml2json(e.toolbox,"")),e.hasOwnProperty("context")&&(this.CONTEXT=e.context),e.hasOwnProperty("blocks")&&Gamepad.utils.blocks(e.blocks,""),e.hasOwnProperty("wrap")&&Gamepad.utils.wrap(e.wrap,"")},Gamepad.BlocklyManager=class{constructor(e){e=e||{},this.isCoding=!1,this.start=!0===e.start,this.customHighlight=!0===e.customHighlight,this.workspace=e.workspace||Blockly.getMainWorkspace(),this.workspace.addChangeListener(e=>{e.type==Blockly.Events.BLOCK_MOVE&&(this.isCoding||this.removeHighlight(),this.isCoding=!0)}),this.reset()}code(e){this.isCoding=!1,this.start&&this.clear();let t=Blockly.JavaScript.workspaceToCode(this.workspace);return t=Gamepad.utils.code(t,e)}clear(){let e=this.workspace.getTopBlocks();for(let t of e)t.type.includes("procedures_def")||this.start&&t.type==Gamepad.BLOCKS.START||t.dispose(!1)}reset(){this.workspace.clear(),setTimeout(()=>{this.workspace.trashcan&&this.workspace.trashcan.clear()}),this.start&&(this.parentBlock=this.workspace.newBlock(Gamepad.BLOCKS.START,Gamepad.STATES.STARTED),this.parentBlock.setDeletable(!1),this.parentBlock.startHat_=!0,this.parentBlock.initSvg(),this.parentBlock.render(),this.parentBlock.setMovable(!1),this.parentBlock.moveBy(20,20)),this.workspace.scrollX=15,this.workspace.scrollY=15,this.workspace.undoStack_=[]}setToolbox(e){if(!e)return;let t=JSON.parse(Gamepad.TOOLBOX);if("blocks"in e){if(!Array.isArray(e.blocks))throw new Error("options.blocks must be an array.");Gamepad.utils.filter(t.XML,e),this.workspace.updateToolbox(Gamepad.utils.json2xml(t))}else"all"in e&&this.workspace.updateToolbox(Gamepad.utils.json2xml(t))}setHighlight(e){if(this.customHighlight){this.removeHighlight();try{document.querySelector("[data-id='"+e+"']").classList.add("blocklySelected")}catch(e){}}else this.workspace.highlightBlock(e)}removeHighlight(){if(this.customHighlight){let e=document.getElementsByClassName("blocklySelected");for(let t=e.length;t>0;t--)e[t-1].classList.remove("blocklySelected")}else this.workspace.highlightBlock()}getBlocksNumber(){let e=this.workspace.getAllBlocks(),t={total:0};for(let r of e)null==t[r.type]&&(t[r.type]=0),t[r.type]++,t.total++;return t}save(e){if("undefined"!=typeof Storage){let t=Blockly.Xml.workspaceToDom(this.workspace);localStorage.setItem(e,Blockly.Xml.domToText(t))}}restore(e){if("undefined"!=typeof Storage){if(null!=localStorage.getItem(e)){this.workspace.clear();try{let t=Blockly.Xml.textToDom(localStorage.getItem(e));Blockly.Xml.domToWorkspace(t,this.workspace)}catch(e){this.reset()}}if(this.workspace.trashcan&&this.workspace.trashcan.clear(),this.start){let e=this.workspace.getTopBlocks();for(let t of e)if(t.type==Gamepad.BLOCKS.START)return;this.reset()}}}resize(){Blockly.svgResize(this.workspace)}},Gamepad.History=class{constructor(){this.reset()}get length(){return this.history.length}add(e,t){this.history.splice(this.index+1),this.history.push(e),t&&(this.index=this.length-1)}get next(){if(this.index<this.length-1)return this.history[++this.index]}get prior(){if(this.index>-1)return this.history[--this.index]}get current(){if(this.index>-1)return this.history[this.index]}reset(){this.index=-1,this.history=[]}},Gamepad.Queue=class{constructor(){this.requests=[],this.closed=!1,this.setListener()}setListener(){this.listener=new Promise((e,t)=>{this.setted=(r=>r?r.close?e(!0):r.reset?t(Gamepad.ERRORS.CLOSED):void e():e())}),this.listener.then(()=>{},()=>{})}reset(){this.requests=[],this.closed=!1,this.setted({reset:!0}),this.setListener()}close(){this.closed=!0,this.setted({close:!0})}open(){this.closed=!1}get(){return this.closed?Promise.resolve():this.listener.then(e=>{if(e)return void this.setListener();let t=this.requests.shift();return this.setListener(),0!=this.requests.length&&this.setted(),t})}set(e){this.requests.push(e),this.setted()}},Gamepad.Asynchronizer=class{constructor(e,t,r){this.sync=e||{},this.async={},this.onRun=t||function(){},this.onReset=r||function(){},this.state=Gamepad.utils.promiseWrapper(),this.state.resolve(),this.handler={get:function(e,t){if(Object.getOwnPropertySymbols(e).includes(Gamepad.SYMBOL))throw Gamepad.ERRORS.CLOSED;return e[t]}}}reset(){if(!this.state.isPending())return this.state=Gamepad.utils.promiseWrapper(),this.async[Gamepad.SYMBOL]=!0,this.onReset.apply(this.sync,[...arguments])}run(){if(this.state.isFulfilled())return;this.async=new Proxy(this.sync&&this.sync.prototype?new this.sync:Object.defineProperties(Object.assign({},this.sync),Object.getOwnPropertyDescriptors(this.sync)),this.handler);let e=this.onRun.apply(this.async,[...arguments]);return e instanceof Promise?e.then(e=>(this.state.resolve(),e)):(this.state.resolve(),e)}},Gamepad.Worker=function(){const e=new Gamepad.Asynchronizer({history:new Gamepad.History,queue:new Gamepad.Queue,requests:new Gamepad.Queue,debugger:{id:null,promise:Gamepad.utils.promiseWrapper()},isRunning:!1,back:!1,go:function(e){return new Promise(t=>{this.queue.set({back:!0===e,resolve:t})})},freeQueue:function(){this.queue.close();const e=this.queue.requests;this.queue.reset(),e.forEach(e=>e&&e.resolve&&e.resolve(!1))},start:function(e){this.back=!0===e,this.isRunning||(this.isRunning=!0,this.queue.close(),this.queue.open())},stop:function(){this.isRunning=!1,this.removeBreakpoint()},setRequest:function(e){return new Promise((t,r)=>{this.requests.set({request:e,resolve:t,reject:r})})},close:function(){this.requests.close()},open:function(){this.requests.open()},setBreakpoint:function(e){if(void 0!==e&&(null!==e||null!==this.debugger.id))return this.debugger.promise.isPending()&&this.debugger.promise.resolve(!1),this.debugger.id=e,this.debugger.promise=Gamepad.utils.promiseWrapper(),this.debugger.promise.then(e=>e)},removeBreakpoint:function(){this.setBreakpoint(null)}},function(){const e=async()=>{let e=this.history.current;this.history.prior,void 0!==e?(await this.manage(e,!0,!0),r(e.id)):this.stop()},t=async()=>{let e,t;if(void 0!==(e=this.history.next))return await this.manage(e,!1,!0),void r(e.id);if(void 0!==(e=await this.requests.get())){if(this.history.current){if(this.history.current.method==Gamepad.STATES.FINISHED&&e.request.method!=Gamepad.STATES.STARTED&&e.request.method!=Gamepad.STATES.COMPLETED)return void e.reject(Gamepad.ERRORS.FINISHED);if(this.history.current.method==Gamepad.STATES.COMPLETED)return e.reject(Gamepad.ERRORS.COMPLETED),void this.stop()}void 0===(t=await this.manage(e.request,!1,!1))&&(t={}),this.history.add(e.request,!0),r(e.request.id),t.finished?(this.history.add(Gamepad.utils.build(Gamepad.STATES.FINISHED,[],Gamepad.STATES.FINISHED,{generated:!0}),!0),this.history.next,r(Gamepad.STATES.FINISHED),e.reject(Gamepad.ERRORS.FINISHED)):t.completed?(this.history.add(Gamepad.utils.build(Gamepad.STATES.COMPLETED,[],Gamepad.STATES.COMPLETED,{generated:!0}),!0),this.history.next,r(Gamepad.STATES.COMPLETED),e.reject(Gamepad.ERRORS.COMPLETED),this.close()):e.resolve(t.return)}else this.stop()},r=e=>{null!==this.debugger.id&&this.debugger.id==e&&(this.debugger.promise.resolve(!0),this.freeQueue(),this.stop())};(async()=>{try{for(;;){let r=this.isRunning?{back:this.back}:await this.queue.get()||{p:"p",back:this.back};r.back?await e():await t(),r.resolve&&r.resolve(!0)}}catch(e){Gamepad.utils.errorHandler(e)}})()},function(){this.freeQueue(),this.queue.reset(),this.requests.reset(),this.history.reset(),this.removeBreakpoint()});Object.assign(this,{reset:function(){e.reset(),e.run()},onRequest:function(t,r){e.sync.manage=function(e,s,a){return r.apply(t,[e,s,a])}},getInstance:function(){return e.async}});for(const t of["go","setRequest","start","stop","close","freeQueue","setBreakpoint","removeBreakpoint"])this[t]=function(){let r=e.async;try{return r[t].apply(r,[...arguments])}catch(e){Gamepad.utils.errorHandler(e)}};for(const t of["isRunning","back"])Object.defineProperty(this,t,{get:function(){try{return e.async[t]}catch(e){}}});this.reset()},Gamepad.evalContext=function(code,worker){try{let CONTEXT=Gamepad.CONTEXT;eval(code)}catch(e){console.error("There's an error in the code: \n",code),console.error(e)}},Gamepad.observer={INSERT:"insert",UPDATE:"update",DELETE:"delete",POP:"pop",PUSH:"push",SHIFT:"shift",UNSHIFT:"unshift",REVERSE:"reverse",nonObservables:{Date:!0,Blob:!0,Number:!0,String:!0,Boolean:!0,Error:!0,SyntaxError:!0,TypeError:!0,URIError:!0,Function:!0,Promise:!0,RegExp:!0},observableDefinition:{revoke:{value:function(){this[Gamepad.SYMBOL].revoke()}},observe:{value:function(e,t){let r=this[Gamepad.SYMBOL].observers;if("function"!=typeof e)throw new Error("observer parameter MUST be a function");r.has(e)||r.set(e,Object.assign({},t))}},unobserve:{value:function(){let e,t=this[Gamepad.SYMBOL].observers;if(t.size)if(e=arguments.length)for(;e--;)t.delete(arguments[e]);else t.clear()}}},prepareArray:function(e,t){let r,s=e.length,a=new Array(e.length);for(a[Gamepad.SYMBOL]=t;s--;)(r=e[s])&&"object"==typeof r&&!Gamepad.observer.nonObservables.hasOwnProperty(r.constructor.name)?a[s]=Array.isArray(r)?new Gamepad.ArrayObserver({target:r,ownKey:s,parent:t}).proxy:new Gamepad.ObjectObserver({target:r,ownKey:s,parent:t}).proxy:a[s]=r;return a},prepareObject:function(e,t){let r,s,a=Object.keys(e),o=a.length,i={[Gamepad.SYMBOL]:t};for(;o--;)(s=e[r=a[o]])&&"object"==typeof s&&!Gamepad.observer.nonObservables.hasOwnProperty(s.constructor.name)?i[r]=Array.isArray(s)?new Gamepad.ArrayObserver({target:s,ownKey:r,parent:t}).proxy:new Gamepad.ObjectObserver({target:s,ownKey:r,parent:t}).proxy:i[r]=s;return i},callObservers:function(e,t){for(let r of e.keys())try{r(t)}catch(e){console.error("failed to deliver changes to listener "+r,e)}},getAncestorInfo:function(e){let t,r=[],s=0,a=0;if(!e.isRevoked){for(;e.parent;)if(r[s++]=e.ownKey,(e=e.parent).isRevoked)return;for(t=new Array(s);s--;)t[a++]=r[s];return{observers:e.observers,path:t}}},getLastProp:function(e,t){for(let r=0;r<t.length-1;r++)e=e[t[r]];return{key:t[t.length-1],target:e}},loadChange:function(e,t){let{target:r,key:s}=Gamepad.observer.getLastProp(e,t.path);Array.isArray(r)?(t.type==Gamepad.observer.INSERT&&(r.length>s?r.splice(s,0,t.value):r[s]=t.value),t.type==Gamepad.observer.DELETE&&r.splice(s,1)):(t.type==Gamepad.observer.INSERT&&(r[s]=t.value),t.type==Gamepad.observer.DELETE&&delete r[s]),t.type==Gamepad.observer.PUSH&&r[s].push.apply(r,t.value),t.type==Gamepad.observer.POP&&r[s].pop(),t.type==Gamepad.observer.UNSHIFT&&r[s].unshift.apply(r,t.value),t.type==Gamepad.observer.SHIFT&&r[s].shift(),t.type==Gamepad.observer.REVERSE&&r[s].reverse(),t.type==Gamepad.observer.UPDATE&&(r[s]=t.value)},unloadChange:function(e,t){let{target:r,key:s}=Gamepad.observer.getLastProp(e,t.path);if(Array.isArray(r)?(t.type==Gamepad.observer.INSERT&&(r.length>s?r.splice(s,1):delete r[s]),t.type==Gamepad.observer.DELETE&&r.splice(s,0,t.oldValue)):(t.type==Gamepad.observer.INSERT&&delete r[s],t.type==Gamepad.observer.DELETE&&(r[s]=t.oldValue)),t.type==Gamepad.observer.PUSH)for(let e=0;e<t.value.length;e++)r[s].pop();if(t.type==Gamepad.observer.POP&&r[s].push(t.oldValue),t.type==Gamepad.observer.UNSHIFT)for(let e=0;e<t.value.length;e++)r[s].shift();t.type==Gamepad.observer.SHIFT&&r[s].unshift(t.oldValue),t.type==Gamepad.observer.REVERSE&&r[s].reverse(),t.type==Gamepad.observer.UPDATE&&(r[s]=t.oldValue)},observeJson:function(e){if(!(!e||"object"!=typeof e||Gamepad.observer.nonObservables.hasOwnProperty(e.constructor.name)||"observe"in e||"unobserve"in e||"revoke"in e)){return(Array.isArray(e)?new Gamepad.ArrayObserver({target:e,ownKey:null,parent:null}):new Gamepad.ObjectObserver({target:e,ownKey:null,parent:null})).proxy}if(!e||"object"!=typeof e)throw new Error("observable MAY ONLY be created from non-null object only");if("observe"in e||"unobserve"in e||"revoke"in e)throw new Error('target object MUST NOT have nor own neither inherited properties from the following list: "observe", "unobserve", "revoke"');if(Gamepad.observer.nonObservables.hasOwnProperty(e.constructor.name))throw new Error(e+" found to be one of non-observable object types: "+Gamepad.observer.nonObservables)}},Gamepad.Observer=class{constructor(e,t){let r=t(e.target,this);null===e.parent?(this.isRevoked=!1,Object.defineProperty(this,"observers",{value:new Map}),Object.defineProperties(r,Gamepad.observer.observableDefinition)):(this.parent=e.parent,this.ownKey=e.ownKey),this.revokable=Proxy.revocable(r,this),this.proxy=this.revokable.proxy,this.target=r}set(e,t,r){if(this.isRevoked)return e[t]=r,!0;let s,a,o,i=e[t];if(s=r&&"object"==typeof r&&!Gamepad.observer.nonObservables.hasOwnProperty(r.constructor.name)?Array.isArray(r)?new Gamepad.ArrayObserver({target:r,ownKey:t,parent:this}).proxy:new Gamepad.ObjectObserver({target:r,ownKey:t,parent:this}).proxy:r,e[t]=s,i&&"object"==typeof i){let e=i[Gamepad.SYMBOL];e&&(i=e.revoke())}return(a=Gamepad.observer.getAncestorInfo(this))?(a.observers.size&&(a.path.push(t),o=void 0===i?[{type:Gamepad.observer.INSERT,path:a.path,value:s,object:this.proxy}]:[{type:Gamepad.observer.UPDATE,path:a.path,value:s,oldValue:i,object:this.proxy}],Gamepad.observer.callObservers(a.observers,o)),!0):void 0}deleteProperty(e,t){let r,s,a=e[t];if(delete e[t]){if(a&&"object"==typeof a){let e=a[Gamepad.SYMBOL];e&&(a=e.revoke())}if(!(r=Gamepad.observer.getAncestorInfo(this)))return;return r.observers.size&&(r.path.push(t),s=[{type:Gamepad.observer.DELETE,path:r.path,oldValue:a,object:this.proxy}],Gamepad.observer.callObservers(r.observers,s)),!0}return!1}},Gamepad.ArrayObserver=class extends Gamepad.Observer{constructor(e){super(e,Gamepad.observer.prepareArray)}revoke(){this.isRevoked=!0;let e,t=this.target,r=t.length;for(;r--;)if((e=t[r])&&"object"==typeof e){let s=e[Gamepad.SYMBOL];s&&(t[r]=s.revoke())}return t}get(e,t){const r={pop:function(e,t){if(0==e.length)return;let r;if((r=e.pop())&&"object"==typeof r){let e=r[Gamepad.SYMBOL];e&&(r=e.revoke())}let s=Gamepad.observer.getAncestorInfo(t);return s?(s.observers.size&&Gamepad.observer.callObservers(s.observers,[{type:Gamepad.observer.POP,path:s.path,oldValue:r,object:t.proxy}]),r):void 0},push:function(e,t){let r,s,a,o,i,n=arguments.length-2,l=new Array(n),p=Gamepad.observer.getAncestorInfo(t);for(i=e.length,r=0;r<n;r++)(s=arguments[r+2])&&"object"==typeof s&&!Gamepad.observer.nonObservables.hasOwnProperty(s.constructor.name)&&(s=Array.isArray(s)?new Gamepad.ArrayObserver({target:s,ownKey:i+r,parent:t}).proxy:new Gamepad.ObjectObserver({target:s,ownKey:i+r,parent:t}).proxy),l[r]=s;if(a=Reflect.apply(e.push,e,l),p)return p.observers.size&&(o=[{type:Gamepad.observer.PUSH,path:p.path,value:l,object:t.proxy}],Gamepad.observer.callObservers(p.observers,o)),a},shift:function(e,t){if(0==e.length)return;let r,s,a,o,i,n;if((r=e.shift())&&"object"==typeof r){let e=r[Gamepad.SYMBOL];e&&(r=e.revoke())}for(s=0,a=e.length;s<a;s++)if((o=e[s])&&"object"==typeof o){let e=o[Gamepad.SYMBOL];e&&(e.ownKey=s)}return(i=Gamepad.observer.getAncestorInfo(t))?(i.observers.size&&(n=[{type:Gamepad.observer.SHIFT,path:i.path,oldValue:r,object:t.proxy}],Gamepad.observer.callObservers(i.observers,n)),r):void 0},unshift:function(e,t){let r,s,a,o;(r=Array.from(arguments)).splice(0,2),r.forEach((e,s)=>{e&&"object"==typeof e&&!Gamepad.observer.nonObservables.hasOwnProperty(e.constructor.name)&&(r[s]=Array.isArray(e)?new Gamepad.ArrayObserver({target:e,ownKey:s,parent:t}).proxy:new Gamepad.ObjectObserver({target:e,ownKey:s,parent:t}).proxy)}),s=Reflect.apply(e.unshift,e,r);for(let t,r=0,s=e.length;r<s;r++)if((t=e[r])&&"object"==typeof t){let e=t[Gamepad.SYMBOL];e&&(e.ownKey=r)}if(a=Gamepad.observer.getAncestorInfo(t))return a.observers.size&&(o=[{type:Gamepad.observer.UNSHIFT,path:a.path,value:r,object:t.proxy}],Gamepad.observer.callObservers(a.observers,o)),s},reverse:function(e,t){let r,s,a,o,i;for(e.reverse(),r=0,s=e.length;r<s;r++)if((a=e[r])&&"object"==typeof a){let e=a[Gamepad.SYMBOL];e&&(e.ownKey=r)}if(o=Gamepad.observer.getAncestorInfo(t))return o.observers.size&&(i=[{type:Gamepad.observer.REVERSE,path:o.path,object:t.proxy}],Gamepad.observer.callObservers(o.observers,i)),t.proxy},sort:function(e,t,r){let s,a,o,i,n,l=e.slice(0);for(e.sort(r),s=0,a=e.length;s<a;s++)if((o=e[s])&&"object"==typeof o){let e=o[Gamepad.SYMBOL];e&&(e.ownKey=s)}if(i=Gamepad.observer.getAncestorInfo(t))return i.observers.size&&(n=[{type:Gamepad.observer.UPDATE,value:e,oldValue:l,path:i.path,object:t.proxy}],Gamepad.observer.callObservers(i.observers,n)),t.proxy},fill:function(e,t){let r,s,a,o,i,n,l=Gamepad.observer.getAncestorInfo(t),p=[],c=e.length;(r=Array.from(arguments)).splice(0,2),a=(s=r.length)<2?0:r[1]<0?c+r[1]:r[1],o=s<3?c:r[2]<0?c+r[2]:r[2],i=e.slice(0),Reflect.apply(e.fill,e,r);for(let r,s,c=a;c<o;c++)if((r=e[c])&&"object"==typeof r&&!Gamepad.observer.nonObservables.hasOwnProperty(r.constructor.name)&&(e[c]=Array.isArray(r)?new Gamepad.ArrayObserver({target:r,ownKey:c,parent:t}).proxy:new Gamepad.ObjectObserver({target:r,ownKey:c,parent:t}).proxy),i.hasOwnProperty(c)){if((s=i[c])&&"object"==typeof s){let e=s[Gamepad.SYMBOL];e&&(s=e.revoke())}(n=l.path.slice(0)).push(c),p.push({type:Gamepad.observer.UPDATE,path:n,value:e[c],oldValue:s,object:t.proxy})}else(n=l.path.slice(0)).push(c),p.push({type:Gamepad.observer.INSERT,path:n,value:e[c],object:t.proxy});if(l)return l.observers.size&&Gamepad.observer.callObservers(l.observers,p),t.proxy},splice:function(e,t){let r,s,a,o,i,n,l,p,c,h,d=Gamepad.observer.getAncestorInfo(t),u=[],y=e.length;(r=Array.from(arguments)).splice(0,2),l=r.length;for(let e,s=2;s<l;s++)(e=r[s])&&"object"==typeof e&&!Gamepad.observer.nonObservables.hasOwnProperty(e.constructor.name)&&(r[s]=Array.isArray(e)?new Gamepad.ArrayObserver({target:e,ownKey:s,parent:t}).proxy:new Gamepad.ObjectObserver({target:e,ownKey:s,parent:t}).proxy);o=0===l?0:r[0]<0?y+r[0]:r[0],i=l<2?y-o:r[1],n=Math.max(l-2,0),s=Reflect.apply(e.splice,e,r),y=e.length;for(let t,r=0;r<y;r++)(t=e[r])&&"object"==typeof t&&(a=t[Gamepad.SYMBOL])&&(a.ownKey=r);for(p=0,c=s.length;p<c;p++)(h=s[p])&&"object"==typeof h&&(a=h[Gamepad.SYMBOL])&&(s[p]=a.revoke());if(d){if(d.observers.size){let r,a;for(r=0;r<i;r++)(a=d.path.slice(0)).push(o+r),r<n?u.push({type:Gamepad.observer.UPDATE,path:a,value:e[o+r],oldValue:s[r],object:t.proxy}):u.push({type:Gamepad.observer.DELETE,path:a,oldValue:s[r],object:t.proxy});for(;r<n;r++)(a=d.path.slice(0)).push(o+r),u.push({type:Gamepad.observer.INSERT,path:a,value:e[o+r],object:t.proxy});Gamepad.observer.callObservers(d.observers,u)}return s}}};return r.hasOwnProperty(t)?r[t].bind(void 0,e,this):e[t]}},Gamepad.ObjectObserver=class extends Gamepad.Observer{constructor(e){super(e,Gamepad.observer.prepareObject)}revoke(){this.isRevoked=!0;let e,t,r=this.target,s=Object.keys(r),a=s.length;for(;a--;)if((t=r[e=s[a]])&&"object"==typeof t){let s=t[Gamepad.SYMBOL];s&&(r[e]=s.revoke())}return r}},Gamepad.Store=class{constructor(e){this.observer=Gamepad.observer.observeJson(e),this.history=[],this.index=-1,this.changes=[],this.observer.observe(e=>{e.forEach(e=>{"value"in e&&null!=e.value&&(e.value=JSON.parse(JSON.stringify(e.value))),"oldValue"in e&&null!=e.oldValue&&(e.oldValue=JSON.parse(JSON.stringify(e.oldValue))),this.changes.push(e)})})}commit(){this.history.splice(this.index+1),this.history.push(this.changes),this.index=this.history.length-1,this.changes=[]}restore(){let e=this.changes.slice(0);for(;e.length>0;)Gamepad.observer.unloadChange(this.observer,e.pop());this.changes=[]}loadChanges(){if(this.restore(),this.index<this.history.length-1){this.index++;let e=this.history[this.index],t=-1;for(;++t<e.length;)Gamepad.observer.loadChange(this.observer,e[t]);this.changes=[]}}unloadChanges(){if(this.restore(),this.index>-1){let e=this.history[this.index],t=e.length;for(;--t>=0;)Gamepad.observer.unloadChange(this.observer,e[t]);this.index--,this.changes=[]}}},Gamepad.JsonManager=class{constructor(e){this.init(e||{})}reset(){this.init()}init(e){if(void 0!==e&&(this.json=e),this.stores=[],this.index=0,Array.isArray(this.json))for(let e of this.json)this.stores.push(new Gamepad.Store(e));else this.stores.push(new Gamepad.Store(this.json));Object.freeze(this.stores)}get store(){return this.stores[this.index]}get observer(){return this.store.observer}get observers(){return this.stores.map(e=>e.observer)}get history(){return this.store.history}get changes(){return this.store.changes}set changes(e){this.store.changes=e}commit(){this.store.commit()}loadChanges(){this.store.loadChanges()}unloadChanges(){this.store.unloadChanges()}loadNext(){this.index<this.stores.length-1&&this.index++}loadPrior(){this.index>0&&this.index--}},Gamepad.setting(),function(){if("undefined"!=typeof module&&module.exports){const e=require("blockly");module.exports=Gamepad,this.Blockly=e,e.Gamepad=Gamepad}else void 0!==typeof Blockly&&(Blockly.Gamepad=Gamepad)}();